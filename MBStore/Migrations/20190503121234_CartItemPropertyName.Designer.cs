// <auto-generated />
using System;
using MBStore.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MBStore.Migrations
{
    [DbContext(typeof(MBStoreDbContext))]
    [Migration("20190503121234_CartItemPropertyName")]
    partial class CartItemPropertyName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MBStore.Models.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("OrderId");

                    b.Property<decimal>("Total");

                    b.HasKey("CartId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("MBStore.Models.CartItem", b =>
                {
                    b.Property<Guid>("CartItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CartId");

                    b.Property<string>("Name");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("Subtotal");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("MBStore.Models.CartItemProduct", b =>
                {
                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("CartItemId");

                    b.HasKey("ProductId", "CartItemId");

                    b.HasIndex("CartItemId");

                    b.ToTable("CartItemProduct");
                });

            modelBuilder.Entity("MBStore.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CartId");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MBStore.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("ExcludingTaxPrice");

                    b.Property<string>("ImageUrl");

                    b.Property<decimal>("IncludingTaxPrice");

                    b.Property<string>("Name");

                    b.Property<decimal>("VATRate");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MBStore.Models.Cart", b =>
                {
                    b.HasOne("MBStore.Models.Order", "Order")
                        .WithOne("Cart")
                        .HasForeignKey("MBStore.Models.Cart", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MBStore.Models.CartItem", b =>
                {
                    b.HasOne("MBStore.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MBStore.Models.CartItemProduct", b =>
                {
                    b.HasOne("MBStore.Models.CartItem", "CartItem")
                        .WithMany("CartItemProducts")
                        .HasForeignKey("CartItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MBStore.Models.Product", "Product")
                        .WithMany("CartItemProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
